{"version":3,"file":"static/js/705.57326b18.chunk.js","mappings":"qPAqIA,UApHkB,WAChB,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAA4CC,EAAAA,EAAAA,MAA5C,eAAOC,EAAP,YAAoBC,EAApB,EAAoBA,UAAWC,EAA/B,EAA+BA,SAC/BC,EAAAA,EAAAA,YAAU,WACRD,GAAWE,EAAAA,GAAAA,MAAY,4BACxB,GAAE,CAACH,EAAWC,IAEf,IAAMG,EAAoB,SAAC,GAAwC,IAAD,IAArCC,cAAiBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAClD,OAAQD,GACN,IAAK,QACHX,EAASY,GACT,MACF,IAAK,WACHV,EAAYU,GACZ,MACF,QACE,OAEL,EAYGC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAMf,OACE,SAAC,KAAD,CACAC,EAAE,OACFC,EAAE,SACFC,WAAW,6CAHX,UAIA,UAAC,KAAD,WAGGd,IAAa,SAAC,KAAD,CAAUe,GAAG,YAAYC,SAAS,KAEhD,UAAC,KAAD,CAAQC,GAAI,OACXC,UAAW,QADZ,WAEE,SAAC,KAAD,CAAOC,MAAO,YAEd,SAAC,KAAD,CACEC,GAAG,OAEHC,EAAG,GACHC,aAAc,OACdC,aAAa,MACbC,SArCa,SAAAC,GACnBA,EAAMC,iBACN3B,EAAU,CACRL,MAAOA,EACPE,SAAUA,IAEZD,EAAS,IACTE,EAAY,GACb,EAuBK,UAQE,UAAC,KAAD,CAAO8B,QAAS,EAAhB,WACE,UAAC,KAAD,CAAaC,GAAG,QAAhB,WACE,SAAC,KAAD,CAAWC,MAAO,QAAlB,oBACA,SAAC,KAAD,CACEC,KAAK,QACLC,QAAQ,2EACRC,UAAQ,EACRC,SAAU7B,EACVE,KAAK,QACLC,MAAOb,EACPmC,MAAO,cAIX,UAAC,KAAD,CAAaD,GAAG,WAAhB,WACE,SAAC,KAAD,CAAWC,MAAO,QAAlB,uBACA,SAAC,KAAD,CACEC,KAAK,WACLG,SAAU7B,EACVG,MAAOX,EACPU,KAAK,WACLuB,MAAO,cAIX,UAAC,KAAD,CAAOF,QAAS,GAAhB,WACE,SAAC,KAAD,CACEO,UAAUxC,IAASE,EACnBkC,KAAK,SACLZ,UAAW,OACXiB,GAAI,QACJN,MAAO,QACPO,OAAQ,CACND,GAAI,WAPR,qBAYA,SAAC,KAAD,CACEE,UAAW,CAAEC,KAAM,SAAUC,GAAI,OACjCpB,MAAO,QACPqB,QAAS,SAHX,UAKE,SAAC,KAAD,CAAQV,KAAK,SAASW,QArErB,WAAO,IAAD,EACnBjC,GAAiB,OAARE,QAAQ,IAARA,GAAA,UAAAA,EAAUgC,aAAV,eAAiBC,OAAQ,IACnC,EAmEa,mCAWf,C","sources":["pages/LogInPage/LogInPage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Navigate, useNavigate, useLocation } from 'react-router-dom';\n\nimport { useUserLoginMutation } from 'redux/api/AuthApi';\n\nimport {\n  Flex,\n  Box,\n  FormControl,\n  FormLabel,\n  Input,\n  Stack,\n  Button,\n} from '@chakra-ui/react';\nimport { toast } from 'react-toastify';\n\n\nconst LoginView = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userLogin, { isSuccess, isError }] = useUserLoginMutation();\n  useEffect(() => {\n    isError && toast.error('Invalid email or password');\n  }, [isSuccess, isError]);\n\n  const handleInputChange = ({ currentTarget: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    userLogin({\n      email: email,\n      password: password,\n    });\n    setEmail('');\n    setPassword('');\n  };\n\n  let navigate = useNavigate();\n  let location = useLocation();\n\n  const goBack = () => {\n    navigate(location?.state?.from || '/');\n  };\n\n  return (\n    <Box\n    w='100%'\n    h='1000px'\n    bgGradient='linear(to-r, gray.300, red.300, green.200)'>\n    <Flex\n    \n    >\n      {isSuccess && <Navigate to=\"/contacts\" replace={true} />}\n\n      <Stack  mx={'auto'} \n       marginTop={'200px'}>\n        <Stack align={'center'}>\n        </Stack>\n        <Box\n          as=\"form\"\n       \n          p={20}\n          borderRadius={'20px'}\n          autoComplete=\"off\"\n          onSubmit={handleSubmit}\n        >\n          <Stack spacing={4}>\n            <FormControl id=\"email\">\n              <FormLabel color={'black'}>Email</FormLabel>\n              <Input\n                type=\"email\"\n                pattern=\"^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$\"\n                required\n                onChange={handleInputChange}\n                name=\"email\"\n                value={email}\n                color={'black'}\n         \n              />\n            </FormControl>\n            <FormControl id=\"password\">\n              <FormLabel color={'black'}>Password</FormLabel>\n              <Input\n                type=\"password\"\n                onChange={handleInputChange}\n                value={password}\n                name=\"password\"\n                color={'black'}\n     \n              />\n            </FormControl>\n            <Stack spacing={10}>\n              <Button\n                disabled={email && password ? false : true}\n                type=\"submit\"\n                marginTop={'20px'}\n                bg={'white'}\n                color={'black'}\n                _hover={{\n                  bg: '#80b438',\n                }}\n              >\n                Log in\n              </Button>\n              <Stack\n                direction={{ base: 'column', sm: 'row' }}\n                align={'start'}\n                justify={'center'}\n              >\n                <Button type=\"button\" onClick={goBack}>\n                  Back\n                </Button>\n              </Stack>\n            </Stack>\n          </Stack>\n        </Box>\n      </Stack>\n    </Flex>\n    </Box>\n  );\n};\n\nexport default LoginView;\n"],"names":["useState","email","setEmail","password","setPassword","useUserLoginMutation","userLogin","isSuccess","isError","useEffect","toast","handleInputChange","currentTarget","name","value","navigate","useNavigate","location","useLocation","w","h","bgGradient","to","replace","mx","marginTop","align","as","p","borderRadius","autoComplete","onSubmit","event","preventDefault","spacing","id","color","type","pattern","required","onChange","disabled","bg","_hover","direction","base","sm","justify","onClick","state","from"],"sourceRoot":""}